@inject IUserService _userService
@model PrivateChat
@inject IAdminService _adminservice;

<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    
    .message-container {
        display: flex;
        flex-direction: column-reverse; 
    }
</style>

<div class="container rounded-lg border bg-card shadow-sm w-100 max-w-lg d-flex flex-column" style="background: white;">
    <div class="container-fluid space-y-3 d-flex flex-column p-8 border-bottom gap-3">
        <h1 style="text-align: center; background: gray; padding: 10px; border-radius: 12px; color: white; font-size: 20px;">Private Chat</h1>
        <div class="d-flex justify-content-between p-2" style="align-items:center;">

            <div class="text-gray-600 font-bold" style="font-size: 15px; background: white; border-radius: 12px; padding: 15px; position: relative; left: 15px;">
                @Model.RecipientUserName
            </div>

            <div class="text-xs text-gray-600">
                <a asp-action="Chat" asp-controller="Home" class="text-decoration-none text-primary">Go back to group chat</a>
            </div>
        </div>

     
        <div class="scrollable-messages" style="max-height: 500px; overflow-y: auto;">
           
            <div class="d-flex flex-column message-container p-8">
                
                @for (var i = (await _adminservice.GetPrivateChatHistory(Model.RecipientId)).Count - 1; i >= 0; i--)
                {
                    var message = (await _adminservice.GetPrivateChatHistory(Model.RecipientId))[i];
                    var loggedInUser = Context.Request.Cookies["UserId"];
                    int.TryParse(loggedInUser, out int User);
                    var FoundUser = await _userService.GetUserById(User);
                    var isSentByCurrentUser = message.SenderUserName == FoundUser.UserName;

                    <div class="d-flex flex-column">
                        <div class="text-xs text-gray-500 font-bold mb-2 text-@((isSentByCurrentUser) ? "right" : "left")">
                            @(isSentByCurrentUser ? message.SenderUserName : Model.RecipientUserName)
                        </div>

                        <div class="d-flex justify-content-@((isSentByCurrentUser) ? "end" : "start") gap-2">
                            <div class="rounded p-2 bg-light">
                                @message.Message
                            </div>
                            <div class="text-xs text-gray-500">@message.Timestamp.ToString("h:mm tt")</div>
                        </div>
                    </div>
                }
            </div>
        </div>


        <div class="d-flex items-center p-6">
            <form class="d-flex gap-4" asp-action="SendPrivateMessage" method="post" asp-controller="Home">
                <input hidden name="RecId" value="@Model.RecipientId" />
                <input asp-for="Message" required class="form-control rounded-md border bg-background px-4 py-3 text-lg ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 flex-1 min-h-[50px] sm:min-h-[80px]" placeholder="Type a message"></input>
                <button class="btn btn-primary h-12 px-5 py-3" type="submit">Send</button>
            </form>
        </div>
    </div>
</div>






